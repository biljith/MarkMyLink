{"version":3,"sources":["components/Bookmark.js","components/Home.js","components/Login.js","components/Signup.js","App.js","reportWebVitals.js","index.js"],"names":["Bookmark","Card","Group","Content","Image","floated","size","src","Header","Meta","Description","extra","centered","className","textAlign","Button","Component","Home","state","handleItemClick","e","name","setState","activeItem","this","Menu","pointing","inverted","Item","active","onClick","Label","color","position","Segment","Login","setToken","useState","email","setEmail","password","setPassword","error","setError","history","useHistory","handleSubmit","a","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","statusText","json","token","console","log","push","localStorage","setItem","catch","err","Grid","style","height","verticalAlign","Column","maxWidth","as","Form","onSubmit","stacked","Input","fluid","icon","iconPosition","placeholder","onChange","target","value","type","Message","header","to","Signup","setUsername","success","setSuccess","status","App","getItem","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0addb0c6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Card, Grid, Menu, Segment, Label, Button, Image, Icon} from 'semantic-ui-react'\r\n\r\nexport default class Bookmark extends Component{\r\n    render() {\r\n        return (\r\n            <Card.Group>\r\n                <Card>\r\n                    <Card.Content>\r\n                        <Image\r\n                            floated='right'\r\n                            size='mini'\r\n                            src='/images/avatar/large/steve.jpg'\r\n                        />\r\n                        <Card.Header>Steve Sanders</Card.Header>\r\n                        <Card.Meta>Friends of Elliot</Card.Meta>\r\n                        <Card.Description>\r\n                            Steve wants to add you to the group <strong>best friends</strong>\r\n                        </Card.Description>\r\n                    </Card.Content>\r\n                    <Card.Content extra centered>\r\n                        <div className='ui three buttons' textAlign=\"center\">\r\n                            <Button.Group centered>\r\n                                <Button >View</Button>\r\n                                <Button>Edit</Button>\r\n                                <Button>Delete</Button>\r\n                            </Button.Group>\r\n                        </div>\r\n                    </Card.Content>\r\n                </Card>\r\n            </Card.Group>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {Card, Grid, Menu, Segment, Label, Button, Image, Icon} from 'semantic-ui-react'\r\nimport Bookmark from './Bookmark.js'\r\n\r\nexport default class Home extends Component{\r\n    state = {}\r\n\r\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name })\r\n    render() {\r\n        const { activeItem } = this.state\r\n\r\n        return (\r\n            <div>\r\n            <Menu pointing inverted>\r\n                <Menu.Item\r\n                    name='Home'\r\n                    active={activeItem === 'Home'}\r\n                    onClick={this.handleItemClick}\r\n                >\r\n                    Home\r\n                    <Label color='teal'>10</Label>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item\r\n                    name='Cat1'\r\n                    active={activeItem === 'Cat1'}\r\n                    onClick={this.handleItemClick}\r\n                >\r\n\r\n                    Category 1\r\n                    <Label color='teal'>1</Label>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item\r\n                    name='Cat2'\r\n                    active={activeItem === 'Cat2'}\r\n                    onClick={this.handleItemClick}\r\n                >\r\n\r\n                    Category 2\r\n                    <Label color='teal'>1</Label>\r\n                </Menu.Item>\r\n                <Menu.Menu position='right'>\r\n                    <Menu.Item\r\n                        name='logout'\r\n                        active={activeItem === 'logout'}\r\n                        onClick={this.handleItemClick}\r\n                    />\r\n                </Menu.Menu>\r\n            </Menu>\r\n\r\n            <Segment>\r\n                {/*<Card.Group centered items={items}/>*/}\r\n                <Bookmark></Bookmark>\r\n\r\n            </Segment>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n// import React from 'react'\r\n// import { Card } from 'semantic-ui-react'\r\n//\r\n// const Bookmark = () => (\r\n//     <Card.Group>\r\n//       <Card fluid color='red' header='Option 1' />\r\n//       <Card fluid color='orange' header='Option 2' />\r\n//       <Card fluid color='yellow' header='Option 3' />\r\n//     </Card.Group>\r\n// )\r\n//\r\n// export default Bookmark","import React, {useState} from 'react'\r\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react'\r\nimport { Redirect, useHistory, Link } from 'react-router-dom';\r\n\r\nfunction Login ({setToken}) {\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [error, setError] = useState(false);\r\n  const history = useHistory();\r\n\r\n\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    await fetch('/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n                            email,\r\n                            password\r\n                          })\r\n    })\r\n      .then(function(response) {\r\n            if (!response.ok) {throw Error(response.statusText)}\r\n            return response.json()\r\n          }\r\n      )\r\n      .then(\r\n        function(response) {\r\n          const token =  response['token'];\r\n          console.log(token);\r\n          history.push(\"/\")\r\n          localStorage.setItem('token', token)\r\n          setToken(token);\r\n        },\r\n        function(error) {\r\n          console.log(\"error\")\r\n          setError(true);\r\n        }\r\n      )\r\n      .catch(err => {setError(true);console.log(\"error\")})\r\n  };\r\n\r\n  return (\r\n    <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n      <Grid.Column style={{ maxWidth: 450 }}>\r\n        <Header as='h2' color='teal' textAlign='center'>\r\n          Log-in to your account\r\n        </Header>\r\n        <Form size='large' onSubmit={handleSubmit} error={error}>\r\n          <Segment stacked>\r\n            <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' onChange={e => setEmail(e.target.value)} />\r\n            <Form.Input\r\n              fluid\r\n              icon='lock'\r\n              iconPosition='left'\r\n              placeholder='Password'\r\n              type='password'\r\n              onChange={e => setPassword(e.target.value)}\r\n            />\r\n\r\n            <Button color='teal' fluid size='large'>\r\n              Login\r\n            </Button>\r\n          </Segment>\r\n          <Message\r\n            error\r\n            header='Login failed'>\r\n              Login failed with an error.\r\n          </Message>\r\n        </Form>\r\n        <Message>\r\n          New to us? <Link to=\"/signup\">Sign Up</Link>\r\n        </Message>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Login","import React, {useState} from 'react'\r\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react'\r\nimport { Redirect, Link } from 'react-router-dom';\r\n\r\n\r\nfunction Signup () {\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [name, setUsername] = useState();\r\n  const [success, setSuccess] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n\r\n  \r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    await fetch('/signup', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name,\r\n        email,\r\n        password\r\n      })\r\n    }).then(\r\n          function(response) {\r\n            if (response.status != 200) {\r\n              setError(true);\r\n              setSuccess(false);\r\n            }\r\n            else {\r\n              setError(false);\r\n              setSuccess(true);\r\n            }\r\n          },\r\n          function(error) {\r\n            setSuccess(false);\r\n            setError(true);\r\n          }\r\n      );\r\n  }\r\n\r\n  return (\r\n    <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n      <Grid.Column style={{ maxWidth: 450 }}>\r\n        <Header as='h2' color='teal' textAlign='center'>\r\n          Create your account\r\n        </Header>\r\n        <Form size='large' onSubmit={handleSubmit} success={success} error={error}>\r\n          <Segment stacked>\r\n            <Form.Input fluid icon='id badge' iconPosition='left' placeholder='Username' onChange={e => setUsername(e.target.value)} />\r\n            <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' onChange={e => setEmail(e.target.value)} />\r\n            <Form.Input\r\n              fluid\r\n              icon='lock'\r\n              iconPosition='left'\r\n              placeholder='Password'\r\n              type='password'\r\n              onChange={e => setPassword(e.target.value)}\r\n            />\r\n            <Message\r\n              success\r\n              header='Signup Complete'>\r\n              Successfully signed up! <Link to=\"/login\">Log In</Link>.\r\n            </Message>\r\n            <Message\r\n              error\r\n              header='Signup failed'>\r\n              User with the same email already exists. <Link to=\"/login\">Log In</Link>&nbsp;instead\r\n            </Message>\r\n            <Button color='teal' fluid size='large'> \r\n              Signup\r\n            </Button>\r\n          </Segment>\r\n        </Form>\r\n        <Message>\r\n          Already have an account with us? <Link to=\"/login\">Log In</Link>\r\n        </Message>\r\n      </Grid.Column>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Signup","import './App.css';\r\nimport Home from './components/Home.js';\r\nimport Login from './components/Login.js'\r\nimport Signup from './components/Signup.js'\r\n\r\nimport {useState} from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\nfunction App() {\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n  if(!token) {\r\n    return (\r\n      <BrowserRouter>\r\n        <Route path=\"/signup\">\r\n            <Signup />\r\n        </Route>\r\n        <Route path=\"/\">\r\n            <Login setToken = {setToken}/>\r\n        </Route>\r\n      </BrowserRouter>\r\n    )\r\n  } else {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}