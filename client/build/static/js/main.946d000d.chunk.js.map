{"version":3,"sources":["components/Bookmark.js","components/Login.js","components/Signup.js","App.js","reportWebVitals.js","index.js"],"names":["Bookmark","Login","setToken","useState","email","setEmail","password","setPassword","error","setError","history","useHistory","handleSubmit","e","a","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","statusText","json","token","console","log","push","localStorage","setItem","catch","err","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Header","as","color","Form","size","onSubmit","Segment","stacked","Input","fluid","icon","iconPosition","placeholder","onChange","target","value","type","Button","Message","header","to","Signup","name","setUsername","success","setSuccess","status","App","getItem","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.946d000d.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Bookmark() {\n  return(\n    <h2>Bookmarks</h2>\n  );\n}","import React, {useState} from 'react'\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react'\nimport { Redirect, useHistory, Link } from 'react-router-dom';\n\nfunction Login ({setToken}) {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [error, setError] = useState(false);\n  const history = useHistory();\n\n\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    await fetch('/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n                            email,\n                            password\n                          })\n    })\n      .then(function(response) {\n            if (!response.ok) {throw Error(response.statusText)}\n            return response.json()\n          }\n      )\n      .then(\n        function(response) {\n          const token =  response['token'];\n          console.log(token);\n          history.push(\"/bookmarks\")\n          localStorage.setItem('token', token)\n          setToken(token);\n        },\n        function(error) {\n          console.log(\"error\")\n          setError(true);\n        }\n      )\n      .catch(err => {setError(true);console.log(\"error\")})\n  };\n\n  return (\n    <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as='h2' color='teal' textAlign='center'>\n          Log-in to your account\n        </Header>\n        <Form size='large' onSubmit={handleSubmit} error={error}>\n          <Segment stacked>\n            <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' onChange={e => setEmail(e.target.value)} />\n            <Form.Input\n              fluid\n              icon='lock'\n              iconPosition='left'\n              placeholder='Password'\n              type='password'\n              onChange={e => setPassword(e.target.value)}\n            />\n\n            <Button color='teal' fluid size='large'>\n              Login\n            </Button>\n          </Segment>\n          <Message\n            error\n            header='Login failed'>\n              Login failed with an error.\n          </Message>\n        </Form>\n        <Message>\n          New to us? <Link to=\"/signup\">Sign Up</Link>\n        </Message>\n      </Grid.Column>\n    </Grid>\n  );\n}\n\nexport default Login","import React, {useState} from 'react'\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react'\nimport { Redirect, Link } from 'react-router-dom';\n\n\nfunction Signup () {\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [name, setUsername] = useState();\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(false);\n\n\n  \n  const handleSubmit = async e => {\n    e.preventDefault();\n    await fetch('/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password\n      })\n    }).then(\n          function(response) {\n            if (response.status != 200) {\n              setError(true);\n              setSuccess(false);\n            }\n            else {\n              setError(false);\n              setSuccess(true);\n            }\n          },\n          function(error) {\n            setSuccess(false);\n            setError(true);\n          }\n      );\n  }\n\n  return (\n    <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as='h2' color='teal' textAlign='center'>\n          Create your account\n        </Header>\n        <Form size='large' onSubmit={handleSubmit} success={success} error={error}>\n          <Segment stacked>\n            <Form.Input fluid icon='id badge' iconPosition='left' placeholder='Username' onChange={e => setUsername(e.target.value)} />\n            <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' onChange={e => setEmail(e.target.value)} />\n            <Form.Input\n              fluid\n              icon='lock'\n              iconPosition='left'\n              placeholder='Password'\n              type='password'\n              onChange={e => setPassword(e.target.value)}\n            />\n            <Message\n              success\n              header='Signup Complete'>\n              Successfully signed up! <Link to=\"/login\">Log In</Link>.\n            </Message>\n            <Message\n              error\n              header='Signup failed'>\n              User with the same email already exists. <Link to=\"/login\">Log In</Link>&nbsp;instead\n            </Message>\n            <Button color='teal' fluid size='large'> \n              Signup\n            </Button>\n          </Segment>\n        </Form>\n        <Message>\n          Already have an account with us? <Link to=\"/login\">Log In</Link>\n        </Message>\n      </Grid.Column>\n    </Grid>\n  )\n}\n\nexport default Signup","import './App.css';\nimport Bookmark from './components/Bookmark.js';\nimport Login from './components/Login.js'\nimport Signup from './components/Signup.js'\n\nimport {useState} from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport 'semantic-ui-css/semantic.min.css'\n\nfunction App() {\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  if(!token) {\n    return (\n      <BrowserRouter>\n        <Route path=\"/signup\">\n            <Signup />\n        </Route>\n        <Route path=\"/\">\n            <Login setToken = {setToken}/>\n        </Route>\n      </BrowserRouter>\n    )\n  } else {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\">\n            <Bookmark />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}