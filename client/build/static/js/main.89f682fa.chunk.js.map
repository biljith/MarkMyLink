{"version":3,"sources":["components/Bookmark.js","components/Home.js","components/Login.js","components/Signup.js","App.js","reportWebVitals.js","index.js"],"names":["AddBookmark","props","state","name","link","handleFormSubmit","bind","e","preventDefault","token","localStorage","getItem","this","fetch","method","headers","body","JSON","stringify","then","response","window","location","reload","error","fields","Form","onSubmit","Field","placeholder","onChange","setState","target","value","Button","type","Component","BookmarkModal","modalOpen","handleOpen","handleClose","primary","size","onClick","Icon","Modal","open","onClose","closeIcon","Header","Content","Bookmark","Card","Label","color","floating","viewcount","Image","floated","src","image","Meta","as","style","backgroundColor","ribbon","Description","description","extra","centered","Group","widths","animated","href","hidden","visible","handleDelete","createMedia","breakpoints","mobile","tablet","computer","MediaContextProvider","Media","HomepageHeading","Container","text","content","inverted","fontSize","fontWeight","marginBottom","marginTop","DesktopContainer","hideFixedMenu","fixed","showFixedMenu","logout","removeItem","children","greaterThan","Visibility","once","onBottomPassed","onBottomPassedReverse","Segment","textAlign","minHeight","padding","vertical","Menu","pointing","secondary","Item","active","position","ResponsiveContainer","HomepageLayout","useState","bookmarks","setBookmarks","fetched","setFetched","console","log","a","json","data","err","fetchBookmarks","Grid","stackable","verticalAlign","paddingLeft","Row","Column","map","bookmark","Name","Link","Viewcount","icon","circular","divided","Login","setToken","email","setEmail","password","setPassword","setError","history","useHistory","handleSubmit","ok","Error","statusText","push","setItem","catch","height","maxWidth","stacked","Input","fluid","iconPosition","Message","header","to","Signup","setUsername","success","setSuccess","status","App","path","Home","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89f682fa.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Card, Grid, Menu, Segment, Label, Button, Image, Icon, Modal, Form} from 'semantic-ui-react'\r\n\r\nclass AddBookmark extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            link: \"\"\r\n        };\r\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\r\n    }\r\n    \r\n\r\n    handleFormSubmit(e) {\r\n        e.preventDefault();\r\n        var token = localStorage.getItem('token')\r\n        var name = this.state.name\r\n        var link = this.state.link\r\n        fetch('/addBookmark', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            name,\r\n            link,\r\n            token\r\n          })\r\n        }).then(\r\n            function(response) {\r\n                window.location.reload(false)\r\n            },\r\n            function(error) {\r\n                window.location.reload(false)\r\n            }\r\n        );\r\n        // whatever you want to do when user submits a form\r\n    };\r\n\r\n    render() {\r\n        const { fields } = this.state;\r\n\r\n        return (\r\n            <Form onSubmit={this.handleFormSubmit}>\r\n                <Form.Field>\r\n                  <label>Bookmark Name</label>\r\n                  <input placeholder='Bookmark Name' onChange={e => this.setState({name: e.target.value})} />\r\n                </Form.Field>\r\n                <Form.Field>\r\n                  <label>Link</label>\r\n                  <input placeholder='Link' onChange={e => this.setState({link: e.target.value})} />\r\n                </Form.Field>\r\n                <Button type='submit'>Submit</Button>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nclass BookmarkModal extends Component {\r\n    state = {\r\n        modalOpen: false,\r\n    };\r\n\r\n    handleOpen = () => this.setState({ modalOpen: true });\r\n\r\n    handleClose = () => this.setState({ modalOpen: false });\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button primary size='huge' onClick={this.handleOpen}>\r\n                    Add Bookmark\r\n                    <Icon name='right arrow' />\r\n                </Button>\r\n                <Modal\r\n                    open={this.state.modalOpen}\r\n                    onClose={this.handleClose}\r\n                    closeIcon\r\n                >\r\n                    <Modal.Header>Create Bookmark</Modal.Header>\r\n                    <Modal.Content>\r\n                        <AddBookmark handleClose={this.handleClose} />\r\n                    </Modal.Content>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default class Bookmark extends Component{\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n    render() {\r\n        return (\r\n                <Card>\r\n                    <Label color=\"teal\" floating>\r\n                        {this.props.viewcount}\r\n                    </Label>\r\n                    <Card.Content>\r\n                        <Image\r\n                            floated='right'\r\n                            size='tiny'\r\n                            src={this.props.image}\r\n                        />\r\n                        <Card.Header>{this.props.name}</Card.Header>\r\n                        <Card.Meta>{this.props.link}</Card.Meta>\r\n                        <Label as='a' style={{backgroundColor:'#2185d0', color:'white'}} ribbon>\r\n                            Overview\r\n                        </Label>\r\n                        <Card.Description>\r\n                            {this.props.description}\r\n                        </Card.Description>\r\n                    </Card.Content>\r\n                    <Card.Content extra centered>\r\n                        {/*<div className='ui three buttons' textAlign=\"center\">*/}\r\n                        <Button.Group widths={'3'}>\r\n                            <Button floated='left' animated={\"fade\"} as='a' href={'https://'+this.props.link}>\r\n                                <Button.Content hidden>View</Button.Content>\r\n                                <Button.Content visible>\r\n                                    <Icon name='eye' />\r\n                                </Button.Content>\r\n                            </Button>\r\n                            <Button animated={\"fade\"}>\r\n                                <Button.Content hidden>Edit</Button.Content>\r\n                                <Button.Content visible>\r\n                                    <Icon name='edit' />\r\n                                </Button.Content>\r\n                            </Button>\r\n                            <Button floated='left' animated={\"fade\"} onClick={this.handleDelete}>\r\n                                <Button.Content hidden>Delete</Button.Content>\r\n                                <Button.Content visible>\r\n                                    <Icon name='delete' />\r\n                                </Button.Content>\r\n                            </Button>\r\n                        </Button.Group>\r\n                        {/*</div>*/}\r\n                    </Card.Content>\r\n                </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport {\r\n    BookmarkModal\r\n}","import { createMedia } from '@artsy/fresnel'\r\nimport PropTypes from 'prop-types'\r\nimport React, { Component, useState, useEffect } from 'react'\r\nimport {Card} from 'semantic-ui-react'\r\nimport Bookmark, {BookmarkModal} from './Bookmark.js'\r\nimport {\r\n    Button,\r\n    Container,\r\n    Divider,\r\n    Grid,\r\n    Header,\r\n    Icon,\r\n    Image,\r\n    List,\r\n    Menu,\r\n    Segment,\r\n    Sidebar,\r\n    Visibility,\r\n    Label,\r\n} from 'semantic-ui-react'\r\n\r\nconst { MediaContextProvider, Media } = createMedia({\r\n    breakpoints: {\r\n        mobile: 0,\r\n        tablet: 768,\r\n        computer: 1024,\r\n    },\r\n})\r\n\r\n/* Heads up!\r\n * HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled\r\n * components for such things.\r\n */\r\nconst HomepageHeading = ({ mobile }) => (\r\n    <Container text>\r\n        <Header\r\n            as='h1'\r\n            content='Welcome to your bookmark manager'\r\n            inverted\r\n            style={{\r\n                fontSize: mobile ? '2em' : '4em',\r\n                fontWeight: 'normal',\r\n                marginBottom: 0,\r\n                marginTop: mobile ? '1.5em' : '3em',\r\n            }}\r\n        />\r\n        <Header\r\n            as='h2'\r\n            content='Create, save , view and delete your bookmarks all in one place'\r\n            inverted\r\n            style={{\r\n                fontSize: mobile ? '1.5em' : '1.7em',\r\n                fontWeight: 'normal',\r\n                marginTop: mobile ? '0.5em' : '1.5em',\r\n            }}\r\n        />\r\n        <BookmarkModal/>\r\n    </Container>\r\n)\r\n\r\nHomepageHeading.propTypes = {\r\n    mobile: PropTypes.bool,\r\n}\r\n\r\n/* Heads up!\r\n * Neither Semantic UI nor Semantic UI React offer a responsive navbar, however, it can be implemented easily.\r\n * It can be more complicated, but you can create really flexible markup.\r\n */\r\nclass DesktopContainer extends Component {\r\n    state = {}\r\n\r\n    hideFixedMenu = () => this.setState({ fixed: false })\r\n    showFixedMenu = () => this.setState({ fixed: true })\r\n\r\n    logout = () => {\r\n        localStorage.removeItem('token');\r\n        window.location.reload(false);\r\n    }\r\n\r\n    render() {\r\n        const { children } = this.props\r\n        const { fixed } = this.state\r\n\r\n        return (\r\n            <Media greaterThan='mobile'>\r\n                <Visibility\r\n                    once={false}\r\n                    onBottomPassed={this.showFixedMenu}\r\n                    onBottomPassedReverse={this.hideFixedMenu}\r\n                >\r\n                    <Segment\r\n                        inverted\r\n                        textAlign='center'\r\n                        style={{ minHeight: 700, padding: '1em 0em' }}\r\n                        vertical\r\n                    >\r\n                        <Menu\r\n                            fixed={fixed ? 'top' : null}\r\n                            inverted={!fixed}\r\n                            pointing={!fixed}\r\n                            secondary={!fixed}\r\n                            size='large'\r\n                        >\r\n                            <Container>\r\n                                <Menu.Item as='a' active>\r\n                                    Home\r\n                                </Menu.Item>\r\n                                <Menu.Item as='a'>Work</Menu.Item>\r\n                                <Menu.Item as='a'>Company</Menu.Item>\r\n                                <Menu.Item as='a'>Careers</Menu.Item>\r\n                                <Menu.Item position='right' onClick={this.logout}>\r\n                                    <Button as='a' inverted={!fixed}>\r\n                                        Log Out\r\n                                    </Button>\r\n                                </Menu.Item>\r\n                            </Container>\r\n                        </Menu>\r\n                        <HomepageHeading />\r\n                    </Segment>\r\n                </Visibility>\r\n\r\n                {children}\r\n            </Media>\r\n        )\r\n    }\r\n}\r\n\r\nDesktopContainer.propTypes = {\r\n    children: PropTypes.node,\r\n}\r\n\r\nconst ResponsiveContainer = ({ children }) => (\r\n    /* Heads up!\r\n     * For large applications it may not be best option to put all page into these containers at\r\n     * they will be rendered twice for SSR.\r\n     */\r\n    <MediaContextProvider>\r\n        <DesktopContainer>{children}</DesktopContainer>\r\n    </MediaContextProvider>\r\n)\r\n\r\nResponsiveContainer.propTypes = {\r\n    children: PropTypes.node,\r\n}\r\n\r\nfunction HomepageLayout(props) { \r\n    const [bookmarks, setBookmarks] = useState([]);\r\n    const [fetched, setFetched] = useState(false)\r\n    console.log('Billy', props.token)\r\n    const fetchBookmarks = async () => {\r\n        var token = props.token\r\n        await fetch('/bookmarks', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            token\r\n          })\r\n        }).then(response => response.json())\r\n          .then(function(data) {\r\n            console.log('Billy', data)\r\n            setBookmarks(data)\r\n            setFetched(true)\r\n          },\r\n          function(err) {\r\n\r\n          });\r\n    }\r\n    if (!fetched)\r\n        fetchBookmarks(props);\r\n    \r\n    return (\r\n    <ResponsiveContainer>\r\n        <Segment style={{ padding: '8em 0em' }} vertical>\r\n            <Grid stackable verticalAlign='middle' style={{ paddingLeft: '7em' }}>\r\n                <Grid.Row>\r\n                    <Grid.Column>\r\n                        <Card.Group>\r\n                            {\r\n                                bookmarks.map(function(bookmark) {\r\n                                    return (\r\n                                        <Bookmark name = { bookmark.Name} link={ bookmark.Link } image = {bookmark.Image} description = {bookmark.Description} viewcount = {bookmark.Viewcount}></Bookmark>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </Card.Group>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n        </Segment>\r\n\r\n\r\n        <Segment inverted vertical style={{ padding: '5em 0em' }}>\r\n            <div>\r\n                <Header inverted as='h2' icon textAlign='center'>\r\n                    <Icon  name='users' circular />\r\n                    <Header.Content>Team Geauxinue</Header.Content>\r\n                </Header>\r\n            </div>\r\n\r\n            <Grid divided inverted stackable style={{ paddingLeft: '17em' }} textAlign='center'>\r\n                    <Grid.Row>\r\n                        <Grid.Column>\r\n                            <Card.Group>\r\n                                <Card>\r\n                                    <Card.Content>\r\n                                        <Image\r\n                                            floated='right'\r\n                                            size='mini'\r\n                                            src='https://react.semantic-ui.com/images/avatar/large/steve.jpg'\r\n                                        />\r\n                                        <Card.Header>Aakarsh Fadnis</Card.Header>\r\n                                        <Card.Meta>Friends of Elliot</Card.Meta>\r\n                                        <Card.Description>\r\n                                            Steve wants to add you to the group <strong>best friends</strong>\r\n                                        </Card.Description>\r\n                                    </Card.Content>\r\n                                </Card>\r\n                                    <Card>\r\n                                        <Card.Content>\r\n                                            <Image\r\n                                                floated='right'\r\n                                                size='mini'\r\n                                                src='https://react.semantic-ui.com/images/avatar/large/steve.jpg'\r\n                                            />\r\n                                            <Card.Header>Abhas Prasad</Card.Header>\r\n                                            <Card.Meta>Friends of Elliot</Card.Meta>\r\n                                            <Card.Description>\r\n                                                Steve wants to add you to the group <strong>best friends</strong>\r\n                                            </Card.Description>\r\n                                        </Card.Content>\r\n                                    </Card>\r\n                                <Card>\r\n                                    <Card.Content>\r\n                                        <Image\r\n                                            floated='right'\r\n                                            size='mini'\r\n                                            src='https://react.semantic-ui.com/images/avatar/large/steve.jpg'\r\n                                        />\r\n                                        <Card.Header>Biljith Thadichi</Card.Header>\r\n                                        <Card.Meta>Friends of Elliot</Card.Meta>\r\n                                        <Card.Description>\r\n                                            Steve wants to add you to the group <strong>best friends</strong>\r\n                                        </Card.Description>\r\n                                    </Card.Content>\r\n\r\n                                </Card>\r\n                                <Card>\r\n                                    <Card.Content>\r\n                                        <Image\r\n                                            floated='right'\r\n                                            size='mini'\r\n                                            src='https://react.semantic-ui.com/images/avatar/large/steve.jpg'\r\n                                        />\r\n                                        <Card.Header>Sid Keshkar</Card.Header>\r\n                                        <Card.Meta>Friends of Elliot</Card.Meta>\r\n                                        <Card.Description>\r\n                                            Steve wants to add you to the group <strong>best friends</strong>\r\n                                        </Card.Description>\r\n                                    </Card.Content>\r\n\r\n                                </Card>\r\n                            </Card.Group>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n\r\n        </Segment>\r\n    </ResponsiveContainer>\r\n)\r\n} \r\n\r\nexport default HomepageLayout\r\n// import React from 'react'\r\n// import { Card } from 'semantic-ui-react'\r\n//\r\n// const Bookmark = () => (\r\n//     <Card.Group>\r\n//       <Card fluid color='red' header='Option 1' />\r\n//       <Card fluid color='orange' header='Option 2' />\r\n//       <Card fluid color='yellow' header='Option 3' />\r\n//     </Card.Group>\r\n// )\r\n//\r\n// export default Bookmark","import React, {useState} from 'react'\r\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react'\r\nimport { Redirect, useHistory, Link } from 'react-router-dom';\r\n\r\nfunction Login ({setToken}) {\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [error, setError] = useState(false);\r\n  const history = useHistory();\r\n\r\n\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    await fetch('/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n                            email,\r\n                            password\r\n                          })\r\n    })\r\n      .then(function(response) {\r\n            if (!response.ok) {throw Error(response.statusText)}\r\n            return response.json()\r\n          }\r\n      )\r\n      .then(\r\n        function(response) {\r\n          const token =  response['token'];\r\n          console.log(token);\r\n          history.push(\"/\")\r\n          localStorage.setItem('token', token)\r\n          setToken(token);\r\n        },\r\n        function(error) {\r\n          console.log(\"error\")\r\n          setError(true);\r\n        }\r\n      )\r\n      .catch(err => {setError(true);console.log(\"error\")})\r\n  };\r\n\r\n  return (\r\n    <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n      <Grid.Column style={{ maxWidth: 450 }}>\r\n        <Header as='h2' color='teal' textAlign='center'>\r\n          Log-in to your account\r\n        </Header>\r\n        <Form size='large' onSubmit={handleSubmit} error={error}>\r\n          <Segment stacked>\r\n            <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' onChange={e => setEmail(e.target.value)} />\r\n            <Form.Input\r\n              fluid\r\n              icon='lock'\r\n              iconPosition='left'\r\n              placeholder='Password'\r\n              type='password'\r\n              onChange={e => setPassword(e.target.value)}\r\n            />\r\n\r\n            <Button color='teal' fluid size='large'>\r\n              Login\r\n            </Button>\r\n          </Segment>\r\n          <Message\r\n            error\r\n            header='Login failed'>\r\n              Login failed with an error.\r\n          </Message>\r\n        </Form>\r\n        <Message>\r\n          New to us? <Link to=\"/signup\">Sign Up</Link>\r\n        </Message>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Login","import React, {useState} from 'react'\r\nimport { Button, Form, Grid, Header, Message, Segment } from 'semantic-ui-react'\r\nimport { Redirect, Link } from 'react-router-dom';\r\n\r\n\r\nfunction Signup () {\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [name, setUsername] = useState();\r\n  const [success, setSuccess] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n\r\n  \r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    await fetch('/signup', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name,\r\n        email,\r\n        password\r\n      })\r\n    }).then(\r\n          function(response) {\r\n            if (response.status != 200) {\r\n              setError(true);\r\n              setSuccess(false);\r\n            }\r\n            else {\r\n              setError(false);\r\n              setSuccess(true);\r\n            }\r\n          },\r\n          function(error) {\r\n            setSuccess(false);\r\n            setError(true);\r\n          }\r\n      );\r\n  }\r\n\r\n  return (\r\n    <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\r\n      <Grid.Column style={{ maxWidth: 450 }}>\r\n        <Header as='h2' color='teal' textAlign='center'>\r\n          Create your account\r\n        </Header>\r\n        <Form size='large' onSubmit={handleSubmit} success={success} error={error}>\r\n          <Segment stacked>\r\n            <Form.Input fluid icon='id badge' iconPosition='left' placeholder='Username' onChange={e => setUsername(e.target.value)} />\r\n            <Form.Input fluid icon='user' iconPosition='left' placeholder='E-mail address' onChange={e => setEmail(e.target.value)} />\r\n            <Form.Input\r\n              fluid\r\n              icon='lock'\r\n              iconPosition='left'\r\n              placeholder='Password'\r\n              type='password'\r\n              onChange={e => setPassword(e.target.value)}\r\n            />\r\n            <Message\r\n              success\r\n              header='Signup Complete'>\r\n              Successfully signed up! <Link to=\"/login\">Log In</Link>.\r\n            </Message>\r\n            <Message\r\n              error\r\n              header='Signup failed'>\r\n              User with the same email already exists. <Link to=\"/login\">Log In</Link>&nbsp;instead\r\n            </Message>\r\n            <Button color='teal' fluid size='large'> \r\n              Signup\r\n            </Button>\r\n          </Segment>\r\n        </Form>\r\n        <Message>\r\n          Already have an account with us? <Link to=\"/login\">Log In</Link>\r\n        </Message>\r\n      </Grid.Column>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Signup","import './App.css';\r\nimport Home from './components/Home.js';\r\nimport Login from './components/Login.js'\r\nimport Signup from './components/Signup.js'\r\n\r\nimport {useState} from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\nfunction App() {\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n  if(!token) {\r\n    return (\r\n      <BrowserRouter>\r\n        <Route path=\"/signup\">\r\n            <Signup />\r\n        </Route>\r\n        <Route path=\"/\">\r\n            <Login setToken = {setToken}/>\r\n        </Route>\r\n      </BrowserRouter>\r\n    )\r\n  } else {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path=\"/\">\r\n            <Home token={token}/>\r\n          </Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}